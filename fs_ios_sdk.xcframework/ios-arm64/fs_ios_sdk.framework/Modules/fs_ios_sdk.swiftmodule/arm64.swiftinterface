// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.1 (swiftlang-1200.0.41 clang-1200.0.32.8)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name fs_ios_sdk
import AuthenticationServices
import Foundation
import SocketIO
import Swift
import UIKit
import WebKit
@objc @_hasMissingDesignatedInitializers public class FSFullGame : UIKit.UIView, AuthenticationServices.ASAuthorizationControllerDelegate {
  public var userToken: Swift.String?
  public var pushToken: Swift.String?
  public var FSApiKey: Swift.String?
  public var gameId: Swift.String
  public init(id: Swift.String?, userToken: Swift.String? = "", pushToken: Swift.String? = "", FSApiKey: Swift.String? = "", frame: CoreGraphics.CGRect? = CGRect())
  @objc override dynamic public func layoutSubviews()
  public func openPage(completion: @escaping (Swift.String) -> ())
  @objc public func authorizationController(controller: AuthenticationServices.ASAuthorizationController, didCompleteWithAuthorization authorization: AuthenticationServices.ASAuthorization)
  @objc deinit
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
}
extension FSMiniGame : UIKit.UIScrollViewDelegate {
  @objc dynamic public func viewForZooming(in scrollView: UIKit.UIScrollView) -> UIKit.UIView?
}
@objc @_hasMissingDesignatedInitializers public class FSMiniGame : UIKit.UIView, WebKit.WKScriptMessageHandler {
  public var userToken: Swift.String?
  public var pushToken: Swift.String?
  public var FSApiKey: Swift.String?
  public var miniGameId: Swift.String
  public init(id: Swift.String?, userToken: Swift.String? = "", pushToken: Swift.String? = "", FSApiKey: Swift.String? = "", frame: CoreGraphics.CGRect? = CGRect())
  @objc override dynamic public func layoutSubviews()
  @objc override dynamic public var intrinsicContentSize: CoreGraphics.CGSize {
    @objc get
  }
  @objc public func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
  public func openPage(completion: @escaping (Swift.String) -> ())
  public var actionCallback: ((Swift.String) -> Swift.Void)?
  @objc deinit
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
}
